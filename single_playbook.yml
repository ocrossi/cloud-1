---
- hosts: localhost
  vars_files:
    - vault
  tasks:

    - name: Create EC2 instance
      amazon.aws.ec2_instance:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ region }}"
        key_name: oneshot1
        instance_type: t2.medium
        image_id: ami-04a92520784b93e73
        wait: yes
        security_group: ansible-group
        count: 1
        vpc_subnet_id: subnet-013d1009ddcffc87f
        network:
          assign_public_ip: no
        state: started
      register: ec2

    - name: Remove Elastic IP with associated EC2 instance
      amazon.aws.ec2_eip:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ region }}"
        device_id: "{{ ec2.instance_ids[0] }}"
        ip: 52.47.34.182
        state: absent

    - name: Associate Elastic IP with EC2 instance
      amazon.aws.ec2_eip:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ region }}"
        device_id: "{{ ec2.instance_ids[-1] }}"
        ip: "{{ elastic_ip }}"

    - name: gimme eip
      ansible.builtin.debug:
        msg: "{{ elastic_ip }}"

    - name: gimme instances
      ansible.builtin.debug:
        msg: "{{ ec2 }}"

    - name: wait for ssh to come up
      wait_for: host="cloudone.work.gd" port=22 delay=10  timeout=300

    - name: Remove key entry in host file
      ansible.builtin.command: ssh-keygen -f ~/.ssh/known_hosts -R cloudone.work.gd
      # doesnt redirect output to file since it is not a shell

    - name: add ssh key to known hosts
      ansible.builtin.shell: ssh-keyscan -H cloudone.work.gd >> ~/.ssh/known_hosts

- hosts: all
  become: true
  tasks:
    - name: Add Dockerâ€™s official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: latest
        update_cache: yes

    - name: Download Docker Compose
      get_url:
        url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Ensure Docker Compose is executable
      file:
        path: /usr/local/bin/docker-compose
        mode: '0755'
        state: file

    - name: Copy files
      ansible.builtin.copy:
        dest: /srv/cloud-1/
        src: files_remote/.
        mode: 0700


    - name: Enable docker
      ansible.builtin.systemd_service:
        name: docker
        enabled: true
        state: started

    - name: run docker compose
      community.docker.docker_compose_v2:
        project_src: /srv/cloud-1/
