version: "3.9"

services:
  step-ca:
    image: smallstep/step-ca
    networks:
      internal:
        aliases:
          - "ca.cloud1.internal"
    volumes:
      - ./data/step-ca:/home/step
    ports:
      - "9000:9000"
    environment:
      - "DOCKER_STEPCA_INIT_NAME=cloud1"
      - "DOCKER_STEPCA_INIT_DNS_NAMES=localhost,ca.cloud1.internal"
      - "DOCKER_STEPCA_INIT_ACME=true"
    healthcheck:
      test: [ "CMD", "step", "ca", "health" ]
      timeout: 20s
      retries: 10

  reverse_proxy:
    image: traefik:v3.1
    depends_on: 
      step-ca:
        condition: service_healthy
    command: 
      - "--providers.docker"
      - "--log=true"
      - "--log.level=DEBUG"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesResolvers.internal.acme.tlsChallenge=true"
      - "--certificatesResolvers.internal.acme.email=admin"
      - "--certificatesResolvers.internal.acme.storage=/certs/acme.json"
      - "--certificatesresolvers.internal.acme.caserver=https://ca.cloud1.internal:9000/acme/acme/directory"
      - "--certificatesResolvers.internal.acme.httpChallenge=true"
      - "--certificatesResolvers.internal.acme.httpChallenge.entryPoint=web"
    ports:
      - "80:80"
      - "443:443"
    networks:
      internal:
        aliases:
          - "cloud1.internal"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/traefik:/certs
      - /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro

  db:
    container_name: ${CONTAINER_NAME}-db
    image: mysql:8.0
    restart: always
    env_file: .env
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_USER: ${DATABASE_USER}
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "root", "-p$$DATABASE_ROOT_PASSWORD" ]
      timeout: 20s
      retries: 10
    networks:
      - internal
    volumes:
      - db_data:/var/lib/mysql

  phpmyadmin:
    container_name: ${CONTAINER_NAME}-phpmyadmin
    image: phpmyadmin/phpmyadmin
    restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: "${DATABASE_ROOT_PASSWORD}"
    networks:
      - internal
    labels:
      - "traefik.http.routers.phpmyadmin.rule=Host(`cloud1.internal`)&&PathPrefix(`/phpmyadmin`)"
                              # care dont give same name for different rules for a router or will bug
      - "traefik.http.middlewares.phpmyadmin-strip-prefix.stripprefix.prefixes=/phpmyadmin"
      - "traefik.http.routers.phpmyadmin.middlewares=phpmyadmin-strip-prefix"
      - "traefik.http.routers.phpmyadmin.entrypoints=websecure"
      - "traefik.http.routers.phpmyadmin.tls=true"
      - "traefik.http.routers.phpmyadmin.tls.certresolver=internal"

  wordpress:
    container_name: ${CONTAINER_NAME}-wordpress
    image: wordpress:latest
    depends_on:
      db:
        condition: service_healthy
    restart: always
    env_file: .env
    environment:
      WORDPRESS_DB_HOST: db:3306
    volumes: 
      - "./wordpress_persistent:/var/www/html"
      - ./certs:/etc/ssl/certs:ro
    networks:
      - internal
    labels:
      - "traefik.http.routers.wordpress.rule=Host(`cloud1.internal`)"
      - "traefik.http.routers.wordpress.entrypoints=websecure"
      - "traefik.http.routers.wordpress.tls=true"
      - "traefik.http.routers.wordpress.tls.certresolver=internal"

networks:
  internal:
volumes:
  db_data:
